// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package wire

import (
	"github.com/devpablocristo/qh/events/cmd/rest/handlers"
	"github.com/devpablocristo/qh/events/internal/core"
	"github.com/devpablocristo/qh/events/internal/core/user"
	"github.com/devpablocristo/qh/events/internal/platform/cassandra"
	"github.com/devpablocristo/qh/events/pkg/init-setup"
)

// Injectors from wire.go:

func InitializeUserHandler() (*handler.UserHandler, error) {
	cassandraClientPort, err := cassandrasetup.NewCassandraInstance()
	if err != nil {
		return nil, err
	}
	repositoryPort := user.NewUserRepository(cassandraClientPort)
	userUseCasePort := core.NewUserUseCase(repositoryPort)
	userHandler := handler.NewUserHandler(userUseCasePort)
	return userHandler, nil
}

func InitializeAuthHandler() (*handler.AuthHandler, error) {
	cassandraClientPort, err := cassandrasetup.NewCassandraInstance()
	if err != nil {
		return nil, err
	}
	repositoryPort := user.NewUserRepository(cassandraClientPort)
	string2 := initsetup.GetJWTSecretKey()
	authUseCasePort := core.NewAuthUseCase(repositoryPort, string2)
	authHandler := handler.NewAuthHandler(authUseCasePort)
	return authHandler, nil
}
