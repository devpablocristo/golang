// Code generated by MockGen. DO NOT EDIT.
// Source: math.go

// Package math is a generated GoMock package.
package math

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockRandom is a mock of Random interface.
type MockRandom struct {
	ctrl     *gomock.Controller
	recorder *MockRandomMockRecorder
}

// MockRandomMockRecorder is the mock recorder for MockRandom.
type MockRandomMockRecorder struct {
	mock *MockRandom
}

// NewMockRandom creates a new mock instance.
func NewMockRandom(ctrl *gomock.Controller) *MockRandom {
	mock := &MockRandom{ctrl: ctrl}
	mock.recorder = &MockRandomMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRandom) EXPECT() *MockRandomMockRecorder {
	return m.recorder
}

// GenerateInt mocks base method.
func (m *MockRandom) GenerateInt() int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateInt")
	ret0, _ := ret[0].(int)
	return ret0
}

// GenerateInt indicates an expected call of GenerateInt.
func (mr *MockRandomMockRecorder) GenerateInt() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateInt", reflect.TypeOf((*MockRandom)(nil).GenerateInt))
}
