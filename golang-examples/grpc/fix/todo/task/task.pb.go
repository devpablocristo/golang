// Code generated by protoc-gen-go. DO NOT EDIT.
// source: task/task.proto

package task

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type NewTask struct {
	Task                 string   `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewTask) Reset()         { *m = NewTask{} }
func (m *NewTask) String() string { return proto.CompactTextString(m) }
func (*NewTask) ProtoMessage()    {}
func (*NewTask) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8f2b86464a95fe, []int{0}
}

func (m *NewTask) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewTask.Unmarshal(m, b)
}
func (m *NewTask) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewTask.Marshal(b, m, deterministic)
}
func (m *NewTask) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewTask.Merge(m, src)
}
func (m *NewTask) XXX_Size() int {
	return xxx_messageInfo_NewTask.Size(m)
}
func (m *NewTask) XXX_DiscardUnknown() {
	xxx_messageInfo_NewTask.DiscardUnknown(m)
}

var xxx_messageInfo_NewTask proto.InternalMessageInfo

func (m *NewTask) GetTask() string {
	if m != nil {
		return m.Task
	}
	return ""
}

type Task struct {
	Task                 string   `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	Id                   int32    `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Task) Reset()         { *m = Task{} }
func (m *Task) String() string { return proto.CompactTextString(m) }
func (*Task) ProtoMessage()    {}
func (*Task) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8f2b86464a95fe, []int{1}
}

func (m *Task) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Task.Unmarshal(m, b)
}
func (m *Task) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Task.Marshal(b, m, deterministic)
}
func (m *Task) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Task.Merge(m, src)
}
func (m *Task) XXX_Size() int {
	return xxx_messageInfo_Task.Size(m)
}
func (m *Task) XXX_DiscardUnknown() {
	xxx_messageInfo_Task.DiscardUnknown(m)
}

var xxx_messageInfo_Task proto.InternalMessageInfo

func (m *Task) GetTask() string {
	if m != nil {
		return m.Task
	}
	return ""
}

func (m *Task) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func init() {
	proto.RegisterType((*NewTask)(nil), "task.NewTask")
	proto.RegisterType((*Task)(nil), "task.Task")
}

func init() {
	proto.RegisterFile("task/task.proto", fileDescriptor_8e8f2b86464a95fe)
}

var fileDescriptor_8e8f2b86464a95fe = []byte{
	// 188 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2f, 0x49, 0x2c, 0xce,
	0xd6, 0x07, 0x11, 0x7a, 0x05, 0x45, 0xf9, 0x25, 0xf9, 0x42, 0x2c, 0x20, 0xb6, 0x92, 0x2c, 0x17,
	0xbb, 0x5f, 0x6a, 0x79, 0x48, 0x62, 0x71, 0xb6, 0x90, 0x10, 0x17, 0x58, 0x48, 0x82, 0x51, 0x81,
	0x51, 0x83, 0x33, 0x08, 0x22, 0xad, 0xc5, 0xc5, 0x82, 0x4b, 0x4e, 0x88, 0x8f, 0x8b, 0x29, 0x33,
	0x45, 0x82, 0x49, 0x81, 0x51, 0x83, 0x35, 0x88, 0x29, 0x33, 0xc5, 0xc8, 0x82, 0x8b, 0x23, 0x24,
	0x3f, 0x25, 0xdf, 0x27, 0xb3, 0xb8, 0x44, 0x48, 0x87, 0x8b, 0xd7, 0xb9, 0x28, 0x35, 0xb1, 0x24,
	0x15, 0x66, 0x38, 0xaf, 0x1e, 0xd8, 0x6a, 0x28, 0x57, 0x8a, 0x0b, 0xc2, 0x05, 0xb1, 0x95, 0x18,
	0x9c, 0xac, 0xa2, 0x2c, 0xd2, 0x33, 0x4b, 0x32, 0x4a, 0x93, 0xf4, 0x92, 0xf3, 0x73, 0xf5, 0x53,
	0x52, 0xcb, 0x0a, 0x12, 0x93, 0x72, 0xf2, 0x93, 0x8b, 0x32, 0x8b, 0x4b, 0xf2, 0xf5, 0xd3, 0xf3,
	0x73, 0x12, 0xf3, 0xd2, 0x75, 0x53, 0x2b, 0x12, 0x73, 0x0b, 0x72, 0x52, 0x8b, 0xf5, 0xd3, 0x8b,
	0x0a, 0x92, 0xf5, 0x4b, 0xf2, 0x53, 0xf2, 0xc1, 0x9e, 0x49, 0x62, 0x03, 0xfb, 0xc6, 0x18, 0x10,
	0x00, 0x00, 0xff, 0xff, 0x55, 0x75, 0xb1, 0x62, 0xe0, 0x00, 0x00, 0x00,
}
