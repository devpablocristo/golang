version: "3.8"

services:
  mysql-local:
    container_name: mysql-local
    image: "mysql:8.2.0-oracle"
    command: >
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
    restart: unless-stopped
    networks:
      - default
    ports:
      - target: 3306
        published: ${MYSQL_HOST_PORT:-3307}
        protocol: tcp
        mode: host
    expose:
      - ${MYSQL_CONT_PORT:-3306}
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD:-root}"
      MYSQL_DATABASE: "${MYSQL_DATABASE:-test}"
      MYSQL_USER: "${MYSQL_USERNAME:-user}"
      MYSQL_PASSWORD: "${MYSQL_USER_PASSWORD:-12345}"
      MYSQL_ROOT_HOST: "%"
    volumes:
      - type: bind
        source: ./.docker-volumes/mysql
        target: /var/lib/mysql
      - type: bind
        source: ./infra/database
        target: /docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 3

  dynamodb-local:
    image: "amazon/dynamodb-local:1.24.0"
    container_name: dynamodb-local
    command: "-jar DynamoDBLocal.jar -port 8765 -sharedDb -dbPath /home/dynamodblocal/data"
    restart: unless-stopped
    networks:
      - default
    ports:
      - target: 8765
        published: 9876
        protocol: tcp
        mode: host
    expose:
      - 8765
    volumes:
      - type: bind
        source: ./.docker-volumes/dynamodb
        target: /home/dynamodblocal/data

  api:
    container_name: api-local
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - target: 8080
        published: 8080
        protocol: tcp
        mode: host
      - target: 2345  # Puerto para Delve
        published: 2345
        protocol: tcp
        mode: host
    expose:
      - 8080
      - 2345
    networks:
      - default
    depends_on:
      mysql-local:
        condition: service_healthy
      dynamodb-local:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    links:
      - mysql-local
      - dynamodb-local
    volumes:
      - type: bind
        source: ./
        target: /app
    environment:
      AWS_ACCESS_KEY_ID: "${AWS_ACCESS_KEY:-fakeAccessKey}"
      AWS_SECRET_ACCESS_KEY: "${AWS_SECRET_KEY:-fakeSecretKey}"
      REGION: "${AWS_REGION:-local}"
      RABBITMQ_URI: "${RABBITMQ_URI:-amqp://user:password@rabbitmq:5672/}"

  rabbitmq:
    image: "rabbitmq:3-management"
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: "${RABBITMQ_DEFAULT_USER:-user}"
      RABBITMQ_DEFAULT_PASS: "${RABBITMQ_DEFAULT_PASS:-password}"
    ports:
      - target: 5672
        published: 5672
        protocol: tcp
        mode: host
      - target: 15672
        published: 15672
        protocol: tcp
        mode: host
    volumes:
      - type: bind
        source: ./rabbitmq.conf
        target: /etc/rabbitmq/rabbitmq.conf
    healthcheck:
      test: ["CMD-SHELL", "rabbitmqctl status"]
      interval: 10s
      timeout: 5s
      retries: 3

  phpmyadmin:
    image: phpmyadmin:5.2.1-apache
    container_name: phpmyadmin-local
    networks:
      - default
    links:
      - mysql-local
    restart: always
    environment:
      PMA_HOST: "${MYSQL_CONT:-mysql-local}"
      PMA_PORT: "${MYSQL_HOST_PORT:-3307}"
      PMA_ARBITRARY: 1
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD:-root}"
    ports:
      - target: 80
        published: ${PHPMYADMIN_HOST_PORT:-9090}
        protocol: tcp
        mode: host

networks:
  default:
