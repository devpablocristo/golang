// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package shared

import (
	"github.com/devpablocristo/golang/sdk/cmd/gateways/monitoring"
	"github.com/devpablocristo/golang/sdk/cmd/gateways/user"
	"github.com/devpablocristo/golang/sdk/internal/core"
	user2 "github.com/devpablocristo/golang/sdk/internal/core/user"
	"github.com/devpablocristo/golang/sdk/internal/platform/cassandra"
)

// Injectors from wire.go:

func InitializeUserHandler() (*user.Handler, error) {
	cassandraClientPort, err := cassandrasetup.NewCassandraInstance()
	if err != nil {
		return nil, err
	}
	repositoryPort := user2.NewUserRepository(cassandraClientPort)
	userUseCasesPort := core.NewUserUseCases(repositoryPort)
	handler := user.NewHandler(userUseCasesPort)
	return handler, nil
}

func InitializeMonitoring() (*monitoring.Handler, error) {
	handler := monitoring.NewHandler()
	return handler, nil
}
