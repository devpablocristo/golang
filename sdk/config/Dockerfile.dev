FROM golang:1.23

# Instalar Zsh, git, Go tools (Delve y Air), y tzdata para la zona horaria
RUN apt-get update && \
    apt-get install -y --no-install-recommends docker.io git zsh tzdata curl && \
    rm -rf /var/lib/apt/lists/* && \
    go install github.com/go-delve/delve/cmd/dlv@latest && \
    go install github.com/air-verse/air@latest

# Configurar la zona horaria a Buenos Aires, Argentina
ENV TZ=America/Argentina/Buenos_Aires

# Crear un enlace simbólico a la zona horaria correcta
RUN ln -fs /usr/share/zoneinfo/America/Argentina/Buenos_Aires /etc/localtime && \
    dpkg-reconfigure -f noninteractive tzdata

# Agregar el directorio bin de Go al PATH
ENV PATH="/root/go/bin:${PATH}"

# Establecer el directorio de trabajo dentro del contenedor
WORKDIR /app

# Copiar los archivos del proyecto al contenedor
COPY . .

# Asegurarse de que el script de entrypoint sea ejecutable
RUN chmod +x /app/scripts/entrypoint.sh

# Instalar dependencias de Go
RUN go mod download && go mod verify

# Crear el directorio tmp si no existe
RUN mkdir -p /app/tmp

# Crear un usuario no root de forma explícita y establecer Zsh como su shell predeterminado
RUN useradd -m -s /usr/bin/zsh vscode

# Cambiar al usuario vscode para instalar Oh My Zsh
USER vscode
WORKDIR /home/vscode

# Instalar Oh My Zsh para el usuario vscode
RUN curl -Lo install.sh https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh && \
    RUNZSH=no sh install.sh && \
    rm install.sh && \
    cp /home/vscode/.oh-my-zsh/templates/zshrc.zsh-template /home/vscode/.zshrc

# Volver al directorio de trabajo y cambiar el propietario de los archivos
WORKDIR /app
RUN chown -R vscode:vscode /home/vscode

# Exponer los puertos necesarios
EXPOSE 8080 2345

# Definir el script de entrypoint para el contenedor
ENTRYPOINT ["/app/scripts/entrypoint.sh"]
